{"version":3,"sources":["Zipcode.js","App.js","index.js"],"names":["Zipcode","props","react_default","a","createElement","cities","map","city","key","RecordNumber","className","City","State","Location","EstimatedPopulation","TotalWages","BASE_URL","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","state","zipcode","length","urlCity","axios","get","then","resp","setState","data","error","console","log","handleChange","bind","assertThisInitialized","e","target","value","class","type","onChange","onClick","src_Zipcode","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"kRA0BeA,EAvBC,SAACC,GACb,OAEEC,EAAAC,EAAAC,cAAA,WACOH,EAAMI,OAAOC,IAAI,SAAAC,GAAI,OAClBL,EAAAC,EAAAC,cAAA,OAAKI,IAAKD,EAAKE,aAAcC,UAAW,kBACpCR,EAAAC,EAAAC,cAAA,wBAAgBG,EAAKI,MACrBT,EAAAC,EAAAC,cAAA,oBAAYG,EAAKK,OACjBV,EAAAC,EAAAC,cAAA,uBAAeG,EAAKM,UACpBX,EAAAC,EAAAC,cAAA,yBAAiBG,EAAKO,qBACtBZ,EAAAC,EAAAC,cAAA,0BAAkBG,EAAKQ,iBCPrCC,EAAW,wCAoEFC,cAjEb,SAAAA,EAAYhB,GAAM,IAAAiB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAChBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMpB,KAcRwB,aAAc,WACZ,GAAiC,IAA9BP,EAAKQ,MAAMC,QAAQC,OAAa,CAEjC,IAAIC,EAAUb,EAAWE,EAAKQ,MAAMC,QAEpC,IACEG,IAAMC,IAAIF,GAASG,KAAK,SAAAC,GACxBf,EAAKgB,SACH,CACE7B,OAAQ4B,EAAKE,KACbR,QAAS,OAGhB,MAAMS,GACLC,QAAQC,IAAIF,MA3BdlB,EAAKQ,MAAQ,CACXrB,OAAQ,GACRsB,QAAS,IAEXT,EAAKqB,aAAerB,EAAKqB,aAAaC,KAAlBrB,OAAAsB,EAAA,EAAAtB,CAAAD,IANJA,4EASLwB,GACXrB,KAAKa,SAAS,CACZP,QAASe,EAAEC,OAAOC,yCAwBtB,OAEE1C,EAAAC,EAAAC,cAAA,OAAKM,UAAU,OACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oBACfR,EAAAC,EAAAC,cAAA,OAAKyC,MAAM,6BACf3C,EAAAC,EAAAC,cAAA,OAAKyC,MAAM,aACT3C,EAAAC,EAAAC,cAAA,MAAIyC,MAAM,aAAV,yBACA3C,EAAAC,EAAAC,cAAA,KAAGyC,MAAM,QAAO3C,EAAAC,EAAAC,cAAA,wFAIZF,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAAA,+BACEF,EAAAC,EAAAC,cAAA,SAAO0C,KAAK,OAAOC,SAAU1B,KAAKkB,gBAEpCrC,EAAAC,EAAAC,cAAA,UAAQ4C,QAAS3B,KAAKI,cAAtB,WAIFvB,EAAAC,EAAAC,cAAC6C,EAAD,CAAS5C,OAAQgB,KAAKK,MAAMrB,iBAxDhB6C,IAAMC,0BCFxBC,EAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.55fe2d26.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Zipcode = (props) =>{\r\n    return(\r\n   \r\n      <div>\r\n            {props.cities.map(city => (\r\n                <div key={city.RecordNumber} className= \"city-container\">\r\n                    <h1>City Name: {city.City}</h1>\r\n                    <h2>State: {city.State}</h2>\r\n                    <h2>Location: {city.Location}</h2>\r\n                    <h2>Population: {city.EstimatedPopulation}</h2>\r\n                    <h2>Total Wages: {city.TotalWages}</h2>\r\n                </div>\r\n            ))}\r\n            \r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n    \r\n\r\nexport default Zipcode;\r\n","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Zipcode from './Zipcode';\n\n\nconst BASE_URL = 'http://ctp-zip-api.herokuapp.com/zip/';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      cities: [],\n      zipcode: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e){\n    this.setState({\n      zipcode: e.target.value,\n    });\n  }\n\n  handleSubmit= () => {\n    if(this.state.zipcode.length === 5){\n    \n      let urlCity = BASE_URL + this.state.zipcode;\n\n      try{\n        axios.get(urlCity).then(resp => {\n        this.setState (\n          {\n            cities: resp.data,\n            zipcode: ''\n          }\n          )})\n    }catch(error){\n      console.log(error);\n    }\n  }\n}\n\nrender() {\n  return (\n   \n    <div className=\"App\">\n      <div className=\"search-container\">\n      <div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4\">TTP-Pipeline Bootcamp</h1>\n    <p class=\"lead\"><strong>Practice of Implementing API through React. Cities and zip code API</strong></p>\n  </div>\n</div>\n        \n        <h1>ZIP CODE </h1>\n        \n        <label>Enter Zip Code: \n          <input type=\"text\" onChange={this.handleChange}></input>\n        </label>\n        <button onClick={this.handleSubmit}>Submit</button>\n      </div>\n      \n      \n      <Zipcode cities={this.state.cities}/>\n      </div>\n      \n\n    \n  );\n}  \n}\n  \n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport ReactDOM from 'react-dom';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}